#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<string.h>
#include<locale.h> //para fazer as acentuações funcionarem
/*Feito por Livia Dantas - Deus está vendo o seu CTRL + C!*/
//criando os menus
void MenuPrincipal();
void INSERIR ();
void PRIMEIRO ();
void EXIBIR ();
void EXCLUIR ();
void ESVAZIAR ();

//==================================
//definindo a estrutura da lista
//==================================
#define MAX 10
typedef int telem;
typedef struct {
	telem v[MAX];
	int inicio;
	int final;
} tfila;

//===================================
//criando as listas e as funções - Essa parte está no slide
//===================================
void criar (tfila *F){
	F->inicio=0;
	F->final=-1;
	 //vai criar a lista se a posição n for igual a 0
} 
int vazia (tfila F){
	return(F.inicio>F.final);  //vai considerar a lista como vazia
}
int primeiro(tfila F, telem*dado)
{
	if (vazia(F)) return 0;/*Erro:Fila vazia*/
	*dado = F.v[F.inicio];
	return(1);
}

int inserir (tfila *F, telem valor)
{
	if(F->final==MAX-1)return 0;
	(F->final)++;
	F->v[F->final]=valor;
	return(1);
}
int remover (tfila*F,telem*valor)
{
	if(vazia(*F)) return 0; /*Erro:fila vazia*/
	primeiro(*F,valor);
	(F->inicio)++;
	return(1);
}
void imprimir (tfila *F);
//=====================================
//GERANDO AS OPÇÕES DO MENUZINHO
tfila NUMEROS;
int opcao;
main ()
{
	setlocale(LC_ALL, "Portuguese");
	int fim=0;
	criar (&NUMEROS);
	do
	{
		MenuPrincipal();
		switch(opcao)
		{
			case 1: INSERIR();
					break;
			case 2: EXCLUIR();
					break;
			case 3: PRIMEIRO();
					break;
			case 4: EXIBIR();
					break;
			case 5: ESVAZIAR();
					break;
			case 6: fim=1;
					break;
			default: printf("Opção inválida");
					getch();
			
		}
	}while(!(fim));
	printf("Fim do programa");
			getch();
}
void MenuPrincipal(){
	system("cls");
	printf("     EDITOR DE FILA \n");
	printf("\n1 - Adicionar\n");
	printf("\n2 - Excluir \n");
	printf("\n3 - Exibir primeiro elemento\n");
	printf("\n4 - Exibir fila\n");
	printf("\n5 - Esvaziar\n");
	printf("\n6 - SAIR\n");
	printf("\n DIGITE A SUA OPÇÃO...");
	scanf("%d", &opcao);
}
void INSERIR()
{
	telem num;
	system ("cls");
	printf("                   E N T R A D A   D E   D A D O S\n ");
	printf("Digite um número inteiro (zero para terminar):");
	scanf("%d", &num);
	while(!(num==0))
	{
		if(!(inserir (&NUMEROS, num)))
		{
			printf("NUMERO MAXIMO DE ELEMENTOS INSERIDOS");
			getch();
			return;
		}
	printf("Digite um numero inteiro (zero para terminar):");
	scanf("%d", &num);	
		}
	}
void PRIMEIRO()
{
	system("cls");
	printf("			S A I D A     D E    D A D O S  -  L I S T A G E M\n");
	printf("Posição      Numeros\n");
	if(vazia(NUMEROS))
	{
		printf("NENHUM NUMERO INSERIDO");
		getch();
		return;
	}
	imprimir (tfila *F);
	getch();
}
void EXIBIR()
{
	system("cls");
	printf("			P R I M E I R O   E L E M E N T O \n");
	printf("Posição      Elemento\n");
	if(vazia(NUMEROS))
	{
		printf("NENHUM NUMERO INSERIDO");
		getch();
		return;
	}
	imprimir (&NUMEROS);
	getch();
}


void EXCLUIR()
{
	telem num;
	int posicao;
	system("cls");
	printf("           E X C L U I R  D A D O\n");
	printf("Digite O valor a ser excluído:");
	scanf("%d", &num);
	if(!(remover(&NUMEROS, &num)))
		{
			printf("VALOR INEXISTENTE");
			getch();
			return;
		}
		else
		{
			printf("O número %d foi excluído da lista.", num);
			
		}
		getch();
}

void ESVAZIAR()
{
	telem num;
		system("cls");
	if(vazia(NUMEROS))
	{
		printf("NENHUM NUMERO INSERIDO");
		getch();
		return;
	}
	
     while (!(&NUMEROS==0))
     {
     	remover(&NUMEROS, &num);
	 }
	 printf("LISTA ESVAZIADA");
	 getch();
}

void imprimir (tfila *F){
	int i;
	for (i=F.inicio; i<=F.final;i++){
		printf("%4d %16d\n", i, F ->v[i]);
	}
	return;
}
